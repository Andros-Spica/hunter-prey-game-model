---
title: "Hunting Bout model - sensitivity analysis"
author: "Andreas Angourakis"
format: html
editor: visual
---

```{r}
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
library(gridExtra)
library(scales)
```

```{r}
source("library/bifurcationPlot.R")
source("library/tripleRaster_twoParameters.R")
source("library/tripleRaster_fourParameters.R")
```

## Load experiment data

Define path to files:

```{r}
output_dir <- "output/"
experiment_prefix <- "huntingBout experiment-"
```

Load experiment data from file generated by Behavior Space:

-   Numbers of hunters and prey:

```{r}
experiment_name <- "numbers"
exp_numbers <- read.csv(paste0(output_dir, experiment_prefix, experiment_name, "-table.csv"), skip = 6)
# exp_numbers1 <- read.csv(paste0(output_dir, experiment_prefix, experiment_name, "-table.csv"), skip = 6)
# exp_numbers2 <-  read.csv(paste0(output_dir, experiment_prefix, experiment_name, "2-table.csv"), skip = 6)
# exp_numbers3 <-  read.csv(paste0(output_dir, experiment_prefix, experiment_name, "3-table.csv"), skip = 6)
# exp_numbers4 <-  read.csv(paste0(output_dir, experiment_prefix, experiment_name, "4-table.csv"), skip = 6)
```

-   Hunters' minimum and maximum height:

```{r}
experiment_name <- "hunter-height"
exp_height <- read.csv(paste0(output_dir, experiment_prefix, experiment_name, "-table.csv"), skip = 6)
```

-   Hunters' minimum speed

```{r}
experiment_name <- "hunter-speed"
exp_speed <- read.csv(paste0(output_dir, experiment_prefix, experiment_name, "-table.csv"), skip = 6)
```

-   Prey attractor probability:

```{r}
experiment_name <- "prey-attractivess" # typo in exp-file name
exp_preyattract <- read.csv(paste0(output_dir, experiment_prefix, experiment_name, "-table.csv"), skip = 6)
```

-   Number of waypoints:

```{r}
experiment_name <- "waypoints"
exp_waypoints <- read.csv(paste0(output_dir, experiment_prefix, experiment_name, "-table.csv"), skip = 6)
```

## Processing data frames

```{r}
exp_numbers <- exp_numbers %>% #exp_numbers1 %>%
  #bind_rows(exp_numbers2) %>%
  #bind_rows(exp_numbers3) %>%
  #bind_rows(exp_numbers4) %>%
  rename(run_number = X.run.number.) %>%
  rename(step = X.step.) %>%
  mutate(was_bout_successful = ifelse(was.bout.successful == "true", TRUE, FALSE)) %>%
  mutate(parameter_config = paste0(par_num.hunters, " hunters x ", par_num.preys, " prey"))

exp_numbers_long <- exp_numbers %>%
  select(SEED, par_num.hunters, par_num.preys, was_bout_successful) %>%
  pivot_longer(cols = c(par_num.hunters, par_num.preys), names_to = "parameter", values_to = "value")

exp_numbers_short <- exp_numbers %>%
  #group_by(parameter_config) %>%
  group_by(par_num.hunters, par_num.preys) %>%
  summarise(success_rate = mean(was_bout_successful), .groups = "keep")
```

```{r}
exp_height <- exp_height %>%
  rename(run_number = X.run.number.) %>%
  rename(step = X.step.) %>%
  mutate(was_bout_successful = ifelse(was.bout.successful == "true", TRUE, FALSE)) %>%
  mutate(parameter_config = paste0("height [", par_hunters_height_min, ", ", par_hunters_height_max, " prey"))

exp_height_long <- exp_height %>%
  select(SEED, par_hunters_height_min, par_hunters_height_max, was_bout_successful) %>%
  pivot_longer(cols = c(par_hunters_height_min, par_hunters_height_max), names_to = "parameter", values_to = "value")

exp_height_short <- exp_height %>%
  group_by(par_hunters_height_min, par_hunters_height_max) %>%
  summarise(success_rate = mean(was_bout_successful), .groups = "keep")
```

```{r}
exp_speed <- exp_speed %>%
  rename(run_number = X.run.number.) %>%
  rename(step = X.step.) %>%
  mutate(was_bout_successful = ifelse(was.bout.successful == "true", TRUE, FALSE))

exp_speed_long <- exp_speed %>%
  select(SEED, par_hunters_speed_min, was_bout_successful) %>%
  pivot_longer(cols = c(par_hunters_speed_min), names_to = "parameter", values_to = "value")

exp_speed_short <- exp_speed %>%
  group_by(par_hunters_speed_min) %>%
  summarise(success_rate = mean(was_bout_successful), .groups = "keep")
```

```{r}
exp_preyattract <- exp_preyattract %>%
  rename(run_number = X.run.number.) %>%
  rename(step = X.step.) %>%
  rename(par_prey_attractor_probability = par_prey.attractor.probability) %>%
  mutate(was_bout_successful = ifelse(was.bout.successful == "true", TRUE, FALSE))

exp_preyattract_long <- exp_preyattract %>%
  select(SEED, par_prey_attractor_probability, was_bout_successful) %>%
  pivot_longer(cols = c(par_prey_attractor_probability), names_to = "parameter", values_to = "value")

exp_preyattract_short <- exp_preyattract %>%
  group_by(par_prey_attractor_probability) %>%
  summarise(success_rate = mean(was_bout_successful), .groups = "keep")
```

```{r}
exp_waypoints <- exp_waypoints %>%
  rename(run_number = X.run.number.) %>%
  rename(step = X.step.) %>%
  rename(par_num_planned_waypoints = par_num.planned.waypoints) %>%
  mutate(was_bout_successful = ifelse(was.bout.successful == "true", TRUE, FALSE))

exp_waypoints_long <- exp_waypoints %>%
  select(SEED, par_num_planned_waypoints, was_bout_successful) %>%
  pivot_longer(cols = c(par_num_planned_waypoints), names_to = "parameter", values_to = "value")

exp_waypoints_short <- exp_waypoints %>%
  group_by(par_num_planned_waypoints) %>%
  summarise(success_rate = mean(was_bout_successful), .groups = "keep")
```

Load trajectories:

## Parameter space sampling

-   Numbers of hunters and prey:

```{r}
table(exp_numbers$par_num.hunters, exp_numbers$par_num.preys)
```

-   Hunters' minumum and maximum height:

```{r}
table(exp_height$par_hunters_height_min, exp_height$par_hunters_height_max)
```

-   Hunters' minimum speed:

```{r}
table(exp_speed$par_hunters_speed_min, exp_height$par_hunters_speed_max)
```

-   Prey attractor probability:

```{r}
table(exp_preyattract$par_prey_attractor_probability)
```

-   Number of waypoints:

```{r}
table(exp_waypoints$par_num_planned_waypoints)
```

## Plot

### Numbers of hunters and prey

```{r}
ggplot(exp_numbers_long) +
  geom_boxplot(aes(x = was_bout_successful, y = value)) +
  facet_wrap(~parameter, scales = "free")
```

```{r}
ggplot(exp_numbers_short, aes(x = par_num.hunters, y = success_rate)) + 
  geom_point() +
  geom_smooth(method = "lm")
```

```{r}
ggplot(exp_numbers_short, aes(x = par_num.preys, y = success_rate)) + 
  geom_point() +
  geom_smooth(method = "lm")
```

```{r}
plotName <- "plots/numbers-success-rate.png" 
png(plotName, width = 600, height = 500)
ggplot(exp_numbers_short,
       aes(x = par_num.hunters, 
           y = par_num.preys)) +
  geom_raster(aes(fill = success_rate)) +
  labs(x = "Number of hunters", y = "Number of prey", fill = "success rate") +
  theme(
    axis.text = element_text(size = 15),
    axis.title = element_text(size = 25),
    legend.title = element_text(size = 25),
    legend.text = element_text(size = 15)
  )
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

```{r}
plotName <- "plots/numbers-events.png" 
png(plotName, width = 600, height = 600)
tripleRaster_twoParameters(
  exp_numbers,
  parameter_x = "par_num.hunters",
  parameter_y = "par_num.preys",
  variable_1 = "pursues",
  variable_2 = "sneaks",
  variable_3 = "shots",
  parameter_x_label = "Number of hunters",
  parameter_y_label = "Number of prey",
  variable_1_label = "pursues",
  variable_2_label = "sneaks",
  variable_3_label = "shots",
  plot_scale = 5,
  variable_2_point_size = 5,
  variable_3_point_number_legend_keys = 3,
  variable_3_print_values = FALSE,
  legend_title_size = 3,
  legend_text_size = 2,
  variable_3_point_size = c(0.2, 3))
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

### Hunters' height

```{r}
ggplot(exp_height_long) +
  geom_boxplot(aes(x = was_bout_successful, y = value)) +
  facet_wrap(~parameter, scales = "free")
```

```{r}
plotName <- "plots/height-min-success-rate.png" 
png(plotName)
ggplot(exp_height_short, aes(x = par_hunters_height_min, y = success_rate)) + 
  geom_point() +
  geom_smooth(method = "lm")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

```{r}
plotName <- "plots/height-max-success-rate.png" 
png(plotName)
ggplot(exp_height_short, aes(x = par_hunters_height_max, y = success_rate)) + 
  geom_point() +
  geom_smooth(method = "lm")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

```{r}
plotName <- "plots/height-success-rate.png" 
png(plotName)
ggplot(exp_height_short,
       aes(x = par_hunters_height_min, 
           y = par_hunters_height_max)) +
  geom_raster(aes(fill = success_rate)) +
  labs(x = "hunters height (min)", y = "hunters height (max)", fill = "success rate")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

```{r}
plotName <- "plots/height-events.png" 
png(plotName, width = 600, height = 600)
tripleRaster_twoParameters(
  exp_height,
  parameter_x = "par_hunters_height_min",
  parameter_y = "par_hunters_height_max",
  variable_1 = "pursues",
  variable_2 = "sneaks",
  variable_3 = "shots",
  parameter_x_label = "hunters height (min)",
  parameter_y_label = "hunters height (max)",
  variable_1_label = "pursues",
  variable_2_label = "sneaks",
  variable_3_label = "shots",
  plot_scale = 5,
  variable_2_point_size = 5,
  variable_3_point_number_legend_keys = 3,
  variable_3_print_values = FALSE,
  legend_title_size = 3,
  legend_text_size = 2,
  variable_3_point_size = c(0.2, 3))
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

### Hunters' speed

```{r}
ggplot(exp_speed_long) +
  geom_boxplot(aes(x = was_bout_successful, y = value)) +
  facet_wrap(~parameter, scales = "free")
```

```{r}
ggplot(exp_speed_short, aes(x = par_hunters_speed_min, y = success_rate)) + 
  geom_point() +
  geom_smooth(method = "lm")
```

```{r}
plotName <- "plots/speed-success-rate.png" 
png(plotName)
ggplot(exp_speed_short,
       aes(x = par_hunters_speed_min, 
           y = success_rate)) +
  geom_col() +
  labs(x = "hunters speed (min)", y = "success rate")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

```{r}
plotName <- "plots/speed-events.png" 
png(plotName, width = 600, height = 200)
tripleRaster_twoParameters(
  exp_speed,
  parameter_x = "par_hunters_speed_min",
  parameter_y = "par_hunters_speed_max",
  variable_1 = "pursues",
  variable_2 = "sneaks",
  variable_3 = "shots",
  parameter_x_label = "hunters speed (min)",
  parameter_y_label = "",
  variable_1_label = "pursues",
  variable_2_label = "sneaks",
  variable_3_label = "shots",
  plot_scale = 5,
  variable_2_point_size = 5,
  variable_3_point_number_legend_keys = 3,
  variable_3_print_values = FALSE,
  legend_title_size = 3,
  legend_text_size = 2,
  variable_3_point_size = c(0.2, 3)) +
  theme(axis.text.y = element_blank(), legend.position = "bottom")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

### Number of waypoints

```{r}
ggplot(exp_waypoints_long) +
  geom_boxplot(aes(x = was_bout_successful, y = value)) +
  facet_wrap(~parameter, scales = "free")
```

```{r}
ggplot(exp_waypoints_short, aes(x = par_num_planned_waypoints, y = success_rate)) + 
  geom_point() +
  geom_smooth(method = "lm")
```

```{r}
plotName <- "plots/height-success-rate.png" 
png(plotName)
ggplot(exp_waypoints_short,
       aes(x = par_num_planned_waypoints, 
           y = success_rate)) +
  geom_col() +
  labs(x = "number of planned waypoints", y = "success rate")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

```{r}
plotName <- "plots/waypoints-events.png" 
png(plotName, width = 600, height = 200)
tripleRaster_twoParameters(
  exp_waypoints,
  parameter_x = "par_num_planned_waypoints",
  parameter_y = "par_preys_speed_max", # dummy
  variable_1 = "pursues",
  variable_2 = "sneaks",
  variable_3 = "shots",
  parameter_x_label = "number of planned waypoints",
  parameter_y_label = "",
  variable_1_label = "pursues",
  variable_2_label = "sneaks",
  variable_3_label = "shots",
  plot_scale = 5,
  variable_2_point_size = 5,
  variable_3_point_number_legend_keys = 3,
  variable_3_print_values = FALSE,
  legend_title_size = 3,
  legend_text_size = 2,
  variable_3_point_size = c(0.2, 3)) +
  theme(axis.text.y = element_blank(), legend.position = "bottom")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

### Prey attractor probability

```{r}
ggplot(exp_preyattract_long) +
  geom_boxplot(aes(x = was_bout_successful, y = value)) +
  facet_wrap(~parameter, scales = "free")
```

```{r}
ggplot(exp_preyattract_short, aes(x = par_prey_attractor_probability, y = success_rate)) + 
  geom_point() +
  geom_smooth(method = "lm")
```

```{r}
plotName <- "plots/preyattract-success-rate.png" 
png(plotName)
ggplot(exp_preyattract_short,
       aes(x = par_prey_attractor_probability, 
           y = success_rate)) +
  geom_col() +
  labs(x = "prey attractor probability (%)", y = "success rate")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```

```{r}
plotName <- "plots/preyattract-events.png" 
png(plotName, width = 600, height = 200)
tripleRaster_twoParameters(
  exp_preyattract,
  parameter_x = "par_prey_attractor_probability",
  parameter_y = "par_preys_speed_max", # dummy
  variable_1 = "pursues",
  variable_2 = "sneaks",
  variable_3 = "shots",
  parameter_x_label = "prey attractor probability (%)",
  parameter_y_label = "",
  variable_1_label = "pursues",
  variable_2_label = "sneaks",
  variable_3_label = "shots",
  plot_scale = 5,
  variable_2_point_size = 5,
  variable_3_point_number_legend_keys = 3,
  variable_3_print_values = FALSE,
  legend_title_size = 3,
  legend_text_size = 2,
  variable_3_point_size = c(0.2, 3)) +
  theme(axis.text.y = element_blank(), legend.position = "bottom")
dev.off()
```

```{r}
knitr::include_graphics(plotName)
```
